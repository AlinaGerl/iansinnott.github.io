{"version":3,"sources":["webpack:///path---a-refreshing-dose-of-minimalism-70aee540323dffaf1d76.js","webpack:///./.cache/json/a-refreshing-dose-of-minimalism.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/a-refreshing-dose-of-minimalism.json","module","exports","data","post","html","frontmatter","created","title","pathContext","id","next","slug","prev"],"mappings":"AAAAA,cAAc,qBAERC,yFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,KAAA,i7DAAwrDC,aAAqSC,QAAA,2BAAAC,MAAA,qCAAiFC,aAAgBC,GAAA,+IAAAC,MAA4JL,aAAeE,MAAA,gCAAAD,QAAA,4BAA6EK,KAAA,iCAAwCC,MAASP,aAAeE,MAAA,oCAAAD,QAAA,4BAAiFK,KAAA","file":"path---a-refreshing-dose-of-minimalism-70aee540323dffaf1d76.js","sourcesContent":["webpackJsonp([16007101050518155000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/a-refreshing-dose-of-minimalism.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"post\":{\"html\":\"<p>Today I finished rebuilding my blog using Hexo (see last blog post for details). It's a blog, so I knew I wouldn't need too much JS. I started with a blank file and started coding.</p>\\n<p>Once I was satisfied with the event handling logic I had set up I sat back and reviewed my work. 44 lines including a few comments and zero dependencies. Not too bad. The web has come a long way. CSS was able to take care of a lot of the interactions and animations. But I still wanted to do better.</p>\\n<p>It occurred to me that I could actually use the <code>:hover</code> state to accomplish all of my open/close menu interactions. Done! A few more lines eliminated. But I still had the <code>focus</code> event handler I was using to select all text in a text box whenever a user put their cursor inside it. I don't think CSS can do that... so I did end up using JS for this. I took it out of my script file and in-lined it on the input directly.</p>\\n<p>That was the last event I was handling so now I scrapped my whole JS file with its event logic. Wow! No external JS file. How novel... ðŸ˜•.</p>\\n<p>All in all here is the extent of the JS I wrote for the site:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setSelectionRange</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p><strong>Aside:</strong> I'm certainly not against large web appsâ€”on the contrary, I love them. But for this particular project I chose to revel in the minimalism of leveraging CSS to handle almost all of my site interactions.</p>\",\"frontmatter\":{\"created\":\"2016-11-16T08:00:00.000Z\",\"title\":\"A refreshing dose of minimalism\"}}},\"pathContext\":{\"id\":\"/Users/jandrix/dev/sites/blog.iansinnott.com/content/_posts/2016-11-16-a-refreshing-dose-of-minimalism.md absPath of file >>> MarkdownRemark\",\"next\":{\"frontmatter\":{\"title\":\"Migrating from Jekyll to Hexo\",\"created\":\"2016-11-16T08:00:00.000Z\"},\"slug\":\"migrating-from-jekyll-to-hexo\"},\"prev\":{\"frontmatter\":{\"title\":\"The importance of Webpack context\",\"created\":\"2016-11-24T08:00:00.000Z\"},\"slug\":\"the-importance-of-webpack-context\"}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---a-refreshing-dose-of-minimalism-70aee540323dffaf1d76.js","module.exports = {\"data\":{\"post\":{\"html\":\"<p>Today I finished rebuilding my blog using Hexo (see last blog post for details). It's a blog, so I knew I wouldn't need too much JS. I started with a blank file and started coding.</p>\\n<p>Once I was satisfied with the event handling logic I had set up I sat back and reviewed my work. 44 lines including a few comments and zero dependencies. Not too bad. The web has come a long way. CSS was able to take care of a lot of the interactions and animations. But I still wanted to do better.</p>\\n<p>It occurred to me that I could actually use the <code>:hover</code> state to accomplish all of my open/close menu interactions. Done! A few more lines eliminated. But I still had the <code>focus</code> event handler I was using to select all text in a text box whenever a user put their cursor inside it. I don't think CSS can do that... so I did end up using JS for this. I took it out of my script file and in-lined it on the input directly.</p>\\n<p>That was the last event I was handling so now I scrapped my whole JS file with its event logic. Wow! No external JS file. How novel... ðŸ˜•.</p>\\n<p>All in all here is the extent of the JS I wrote for the site:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setSelectionRange</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p><strong>Aside:</strong> I'm certainly not against large web appsâ€”on the contrary, I love them. But for this particular project I chose to revel in the minimalism of leveraging CSS to handle almost all of my site interactions.</p>\",\"frontmatter\":{\"created\":\"2016-11-16T08:00:00.000Z\",\"title\":\"A refreshing dose of minimalism\"}}},\"pathContext\":{\"id\":\"/Users/jandrix/dev/sites/blog.iansinnott.com/content/_posts/2016-11-16-a-refreshing-dose-of-minimalism.md absPath of file >>> MarkdownRemark\",\"next\":{\"frontmatter\":{\"title\":\"Migrating from Jekyll to Hexo\",\"created\":\"2016-11-16T08:00:00.000Z\"},\"slug\":\"migrating-from-jekyll-to-hexo\"},\"prev\":{\"frontmatter\":{\"title\":\"The importance of Webpack context\",\"created\":\"2016-11-24T08:00:00.000Z\"},\"slug\":\"the-importance-of-webpack-context\"}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/a-refreshing-dose-of-minimalism.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/a-refreshing-dose-of-minimalism.json\n// module chunks = 16007101050518155000"],"sourceRoot":""}